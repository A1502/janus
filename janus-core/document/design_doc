
Role：表示一个角色
Permission：表示这个Role这个角色中的任意一个权限
以上二者通过RolePermissionX关联。

PS:以下结论没有提是Id还是Code，是作为省略，因为Id和Code是同时null或非null的。
Role.PermissionTemplate的意思是指Role.PermissionTemplateCode和RoleEntity.PermissionTemplateId
------------------------------------------------------------------------------------------------
有以下结论：
这些结论通过代码的方式实现了逻辑，在RolePermissionUtils里
(1)
Role.OuterObject和Permission.PermissionTemplate.OuterObject必须一致，是null要一致，不是null也要一致

(2)
Role.PermissionTemplate不为null时：
Role.PermissionTemplate和Permission.PermissionTemplate一致

Role.PermissionTemplate为null时：
Permission.PermissionTemplate可以任意

(3)
是否Single的判定是只跟multiple是否null有关，跟其他无关
SingleRole.OuterObject 必然 == null
MultipleRole.OuterObject可能为null。表示不限定OuterObject但是必须装入的是MultiplePermission
SinglePermission.OuterObject 必然 == null

SingleRole只和SinglePermission关联，存在SoleRolePermissionX中
SoleRolePermissionX中只存SingleRole只和SinglePermission关联
依据是:AccessControlCalculator文件的getSinglePermissionInner方法体现，这是个强制要求

(4)
SingleRole不能再添入MultiplePermission。

(5)
MultipleRole，它的multiple = true, 但是OuterObject可为null，这样可以这个Role就可以装入各个OuterObjectType不
同的MultiplePermission了
